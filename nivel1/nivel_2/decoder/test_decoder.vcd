$date
	Mon Apr 24 22:52:03 2023
$end
$version
	Icarus Verilog
$end
$timescale
	1ns
$end
$scope module test_decoder $end
$var wire 7 ! secOut [6:0] $end
$var wire 7 " minOut [6:0] $end
$var wire 7 # dsecOut [6:0] $end
$var reg 4 $ dSec [3:0] $end
$var reg 4 % min [3:0] $end
$var reg 4 & sec [3:0] $end
$scope module DUT $end
$var wire 4 ' dSec [3:0] $end
$var wire 4 ( min [3:0] $end
$var wire 4 ) sec [3:0] $end
$var reg 7 * dsecOut [6:0] $end
$var reg 7 + minOut [6:0] $end
$var reg 7 , secOut [6:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
b1111110 ,
b1111110 +
b1111110 *
b0 )
b0 (
b0 '
b0 &
b0 %
b0 $
b1111110 #
b1111110 "
b1111110 !
$end
#5
b110000 !
b110000 ,
b110000 #
b110000 *
b110000 "
b110000 +
b1 &
b1 )
b1 $
b1 '
b1 %
b1 (
#10
b1101101 !
b1101101 ,
b1101101 #
b1101101 *
b1101101 "
b1101101 +
b10 &
b10 )
b10 $
b10 '
b10 %
b10 (
#15
b1111001 !
b1111001 ,
b1111001 #
b1111001 *
b1111001 "
b1111001 +
b11 &
b11 )
b11 $
b11 '
b11 %
b11 (
#20
b110011 !
b110011 ,
b110011 #
b110011 *
b110011 "
b110011 +
b100 &
b100 )
b100 $
b100 '
b100 %
b100 (
#25
b1011011 !
b1011011 ,
b1011011 #
b1011011 *
b1011011 "
b1011011 +
b101 &
b101 )
b101 $
b101 '
b101 %
b101 (
#30
b1011111 !
b1011111 ,
b1011111 #
b1011111 *
b1011111 "
b1011111 +
b110 &
b110 )
b110 $
b110 '
b110 %
b110 (
#35
b1110010 !
b1110010 ,
b1110010 #
b1110010 *
b1110010 "
b1110010 +
b111 &
b111 )
b111 $
b111 '
b111 %
b111 (
#40
b1111111 !
b1111111 ,
b1111111 #
b1111111 *
b1111111 "
b1111111 +
b1000 &
b1000 )
b1000 $
b1000 '
b1000 %
b1000 (
#45
b1111011 !
b1111011 ,
b1111011 #
b1111011 *
b1111011 "
b1111011 +
b1001 &
b1001 )
b1001 $
b1001 '
b1001 %
b1001 (
